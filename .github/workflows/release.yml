name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
    
    - name: Run unit tests
      run: go test ./...

  functest:
    uses: ./.github/workflows/functest.yml
    with:
      go-version: '1.25'
      os: 'ubuntu-latest'

  release:
    needs: [unittest, functest]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Linux binary for Docker
      uses: actions/upload-artifact@v4
      with:
        name: re-classify-binary
        path: dist/re-classify_linux_amd64_v1/re-classify
        retention-days: 1

  docker:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download binary artifact
      uses: actions/download-artifact@v4
      with:
        name: re-classify-binary
        path: .
    
    - name: Extract tag name
      id: extract_tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/re-classify:${{ steps.extract_tag.outputs.tag }} .
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/re-classify:latest .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/re-classify:${{ steps.extract_tag.outputs.tag }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/re-classify:latest
